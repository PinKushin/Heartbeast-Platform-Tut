<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sStats</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize player stats
display_set_gui_size (view_wview[0], view_hview[0]);

// intialise variable
hp = 3;
maxhp = 3;
sapphires = 0;
score = 0;
highscore = 0;
time = 0;
besttime = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Start the game
var start = keyboard_check_pressed (vk_space);

if gamepad_is_connected (0) {
    start = gamepad_button_check_pressed (0, gp_start)
}

if start == true &amp;&amp; room == rMenu {
    room_goto (rOne);
}
if start == true &amp;&amp; room == rHighScore {
    game_restart ();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="82">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///restart
game_restart ()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="27">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///end game
game_end ()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///play Background music

//create audio emtter
audio_em = audio_emitter_create ();
audio_emitter_gain (audio_em, 0.1);
audio_play_sound_on (audio_em, aTrackOne, true, 10);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw the stats
switch room {
    case rMenu:
        draw_set_font (fTitle);
        draw_set_halign (fa_center);
        draw_text_color (room_width / 2 + 4, 28, "Super Cave #Boy", c_black, c_black, c_black, c_black, 0.5);
        draw_text_color (room_width / 2, 24, "Super Cave #Boy", c_green, c_maroon, c_green, c_maroon, 1);
        
        var str;
        if gamepad_is_connected (0) {
            str = "Press [Start] to Play";
        }else{
            str = "Press [Space] to Play";
        }
        
        draw_set_font (fStart);
        draw_text_color (room_width / 2 + 2, room_height - 46, str, c_black, c_black, c_black, c_black, 0.5);
        draw_text_color (room_width / 2, room_height - 48, str, c_white, c_white, c_white, c_white, 1);
        
        break;
    case rHighScore:
        var pscore = "Your Score Was: " + string (score);
        var hscore = "The High Scores is:" + string (highscore);
        var ptime = "Your Time Was:" + string (time / room_speed);
        var htime = "The Best Time:" + string (besttime / room_speed);
        
        draw_set_font (fTimer);
        draw_set_halign (fa_center);
        draw_text_color (room_width / 2, 64 + 16, pscore, c_white, c_white, c_white, c_white, 1);
        draw_text_color (room_width / 2, 96 + 16, hscore, c_white, c_white, c_white, c_white, 1);
        draw_text_color (room_width / 2, 128 + 16, ptime, c_white, c_white, c_white, c_white, 1);
        draw_text_color (room_width / 2, 176, htime, c_white, c_white, c_white, c_white, 1);
        
        break;
    default:
        //draw the heart spaces
        for (var i = 0; i &lt; maxhp; i++) {
            draw_sprite_ext (sHeart, 0, 24 + i * 36, 20, 1, 1, 0, c_black, .5);
        }
        
        //draw the hearts
        for (var i = 0; i &lt; hp; i++) {
            draw_sprite_ext (sHeart, 0, 24 + i * 36, 20, 1, 1, 0, c_white, 1);
        }
        //draw the Sapphires
        draw_set_halign (fa_right);
        draw_set_font (fTimer);
        
        var str = "x" + string (sapphires);
        draw_text_color (view_wview[0] - 16, 8, str, c_green, c_white, c_blue, c_white, 1);
        
        var textwidth = string_width (str);
        draw_sprite (sSapphireGUI, 0, view_wview[0] - 32 - textwidth, 22);
        
        //timer
        time += 1
        //Draw Timer
        draw_text_color (view_wview[0] / 2, 8, "Time: " + string (floor (time / room_speed)), c_white, c_white, c_white, c_white, 1);
        
        break;
}







</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Make sprite invisable
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
